name: Matrix

on:
  push:
    branches:
      - main
    paths:
      - '**.go'                 # only execute on changes to go files
      - 'go.sum'                # or dependency updates
      - '.github/workflows/**'  # or workflow changes
  pull_request:
    paths:
      - '**.go'
      - 'go.sum'                # or dependency updates
      - '.github/workflows/**'
  release:
    types: [ published ]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:

  # Run golangci-lint
  lint:
    timeout-minutes: 5
    name: Linting
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install libolm
        run: sudo apt-get install libolm-dev libolm3
      - name: Setup go
        uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v8

  # run go test with different go versions
  test:
    timeout-minutes: 40
    name: Unit tests
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Install libolm and dependencies
        run: sudo apt-get install libolm-dev libolm3
      - name: Setup go
        uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'
      - name: Run docker compose
        uses: hoverkraft-tech/compose-action@v2.3.0
        with:
          compose-file: "./docker-compose.yml"
          services: |
            datastore
            cachestore
            queuestore
      - name: Set up gotestfmt
        uses: GoTestTools/gotestfmt-action@v2
        with:
          # Optional: pass GITHUB_TOKEN to avoid rate limiting.
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Install dependencies
        run: go mod tidy

      - name: Run unit tests
        env:
          TESTING_QUEUE_URI: nats://matrix:s3cr3t@localhost:4221
          TESTING_CACHE_URI: redis://matrix:s3cr3t@localhost:6378
          TESTING_DATABASE_URI: postgres://matrix:s3cr3t@localhost:5431/matrix?sslmode=disable
        run: |
          set -euo pipefail
          go test -json -v ./... | tee /tmp/gotest.log | gotestfmt -hide all
      - name: Tear down test containers
        run: docker compose down --remove-orphans


  # build Matrix for linux with different architectures and go versions
  build:
    name: Build for Linux
    timeout-minutes: 5
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        goos: [ "linux" ]
        goarch: [ "amd64" ]
    steps:
      - uses: actions/checkout@v4
      - name: Setup go
        uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'
      - name: Install dependencies x86
        if: ${{ matrix.goarch == '386' }}
        run: sudo apt update && sudo apt-get install -y gcc-multilib
      - env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
          CGO_ENABLED: 1
          CGO_CFLAGS: -fno-stack-protector
        run: go build -trimpath -v -o "bin/" ./cmd/...

  # Dummy step to gate other tests on without repeating the whole list
  initial-tests-done:
    name: Initial tests passed
    needs: [ lint, test, build ]
    runs-on: ubuntu-latest
    if: ${{ !cancelled() }} # Run this even if prior jobs were skipped
    steps:
      - name: Check initial tests passed
        uses: re-actors/alls-green@release/v1
        with:
          jobs: ${{ toJSON(needs) }}

  # run Complement
  complement:
    name: "Complement (Postgresql)"
    timeout-minutes: 20
    needs:
      - initial-tests-done
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    steps:
      - name: Run actions/checkout@v4 for matrix
        uses: actions/checkout@v4
        with:
          path: matrix
      - name: Run docker compose
        uses: hoverkraft-tech/compose-action@v2.3.0
        with:
          compose-file: "./matrix/docker-compose.yml"
          services: |
            datastore
            cachestore
            queuestore
      - name: Install libolm and dependencies
        run: sudo apt-get install libolm-dev libolm3
      - name: Setup go
        uses: actions/setup-go@v5
        with:
          go-version-file: 'matrix/go.mod'
      # Attempt to check out the same branch of Complement as the PR. If it
      # doesn't exist, fallback to main.
      - name: Checkout complement
        shell: bash
        run: |
          mkdir -p complement
          # Attempt to use the version of complement which best matches the current
          # build. Depending on whether this is a PR or release, etc. we need to
          # use different fallbacks.
          #
          # 1. First check if there's a similarly named branch (GITHUB_HEAD_REF
          #    for pull requests, otherwise GITHUB_REF).
          # 2. Attempt to use the base branch, e.g. when merging into release-vX.Y
          #    (GITHUB_BASE_REF for pull requests).
          # 3. Use the default complement branch ("master").
          for BRANCH_NAME in "$GITHUB_HEAD_REF" "$GITHUB_BASE_REF" "${GITHUB_REF#refs/heads/}" "main"; do
            # Skip empty branch names and merge commits.
            if [[ -z "$BRANCH_NAME" || $BRANCH_NAME =~ ^refs/pull/.* ]]; then
              continue
            fi
            (wget -O - "https://github.com/antinvestor/complement/archive/$BRANCH_NAME.tar.gz" | tar -xz --strip-components=1 -C complement) && break
          done
      # Build initial Matrix image
      - run: docker build --build-arg=CGO=0 -t complement-matrix:Postgres -f build/scripts/ComplementPostgres.Dockerfile .
        working-directory: matrix
        env:
          DOCKER_BUILDKIT: 1
          QUEUE_URI: nats://matrix:s3cr3t@queuestore:4222
          CACHE_URI: redis://matrix:s3cr3t@cachestore:6379
          DATABASE_URI: postgres://matrix:s3cr3t@datastore:5432/matrix?sslmode=disable
      - name: Set up gotestfmt
        uses: GoTestTools/gotestfmt-action@v2
        with:
          # Optional: pass GITHUB_TOKEN to avoid rate limiting.
          token: ${{ secrets.GITHUB_TOKEN }}
      # Run Complement
      - name: Run Complement Tests
        working-directory: complement
        run: |
          set -o pipefail &&
          go test -v -json -tags dendrite_blacklist
        shell: bash
        env:
          COMPLEMENT_MATRIX_QUEUE_URI: nats://matrix:s3cr3t@queuestore:4222
          COMPLEMENT_MATRIX_CACHE_URI: redis://matrix:s3cr3t@cachestore:6379
          COMPLEMENT_MATRIX_DATABASE_URI: postgres://matrix:s3cr3t@datastore:5432/matrix?sslmode=disable
          COMPLEMENT_BASE_IMAGE: complement-matrix:Postgres
          COMPLEMENT_SHARE_ENV_PREFIX: COMPLEMENT_MATRIX_


  integration-tests-done:
    name: Integration tests passed
    needs:
      [
        initial-tests-done,
        complement
      ]
    runs-on: ubuntu-latest
    if: ${{ !cancelled() }} # Run this even if prior jobs were skipped
    steps:
      - name: Check integration tests passed
        uses: re-actors/alls-green@release/v1
        with:
          jobs: ${{ toJSON(needs) }}
